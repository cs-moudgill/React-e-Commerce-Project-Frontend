[{"F:\\lcomern\\projfront\\src\\index.js":"1","F:\\lcomern\\projfront\\src\\Routes.js":"2","F:\\lcomern\\projfront\\src\\user\\Signup.js":"3","F:\\lcomern\\projfront\\src\\user\\Signin.js":"4","F:\\lcomern\\projfront\\src\\core\\Home.js":"5","F:\\lcomern\\projfront\\src\\core\\Base.js":"6","F:\\lcomern\\projfront\\src\\core\\Menu.js":"7","F:\\lcomern\\projfront\\src\\auth\\helper\\index.js":"8","F:\\lcomern\\projfront\\src\\backend.js":"9","F:\\lcomern\\projfront\\src\\auth\\helper\\PrivateRoutes.js":"10","F:\\lcomern\\projfront\\src\\user\\AdminDashBoard.js":"11","F:\\lcomern\\projfront\\src\\user\\UserDashBoard.js":"12","F:\\lcomern\\projfront\\src\\user\\Profile.js":"13","F:\\lcomern\\projfront\\src\\admin\\AddCategory.js":"14","F:\\lcomern\\projfront\\src\\auth\\helper\\AdminRoutes.js":"15","F:\\lcomern\\projfront\\src\\admin\\helper\\adminapicall.js":"16","F:\\lcomern\\projfront\\src\\admin\\ManageCategories.js":"17","F:\\lcomern\\projfront\\src\\admin\\AddProduct.js":"18","F:\\lcomern\\projfront\\src\\admin\\ManageProducts.js":"19","F:\\lcomern\\projfront\\src\\admin\\UpdateProduct.js":"20"},{"size":163,"mtime":1610847273402,"results":"21","hashOfConfig":"22"},{"size":1676,"mtime":1612655560564,"results":"23","hashOfConfig":"22"},{"size":2928,"mtime":1611466372939,"results":"24","hashOfConfig":"22"},{"size":3084,"mtime":1611970906886,"results":"25","hashOfConfig":"22"},{"size":756,"mtime":1611122620148,"results":"26","hashOfConfig":"22"},{"size":1198,"mtime":1611900357568,"results":"27","hashOfConfig":"22"},{"size":2808,"mtime":1611970765325,"results":"28","hashOfConfig":"22"},{"size":1645,"mtime":1611806537079,"results":"29","hashOfConfig":"22"},{"size":47,"mtime":1610854491145,"results":"30","hashOfConfig":"22"},{"size":554,"mtime":1612132136078,"results":"31","hashOfConfig":"22"},{"size":2692,"mtime":1612134885268,"results":"32","hashOfConfig":"22"},{"size":249,"mtime":1611877855889,"results":"33","hashOfConfig":"22"},{"size":230,"mtime":1611877769101,"results":"34","hashOfConfig":"22"},{"size":2677,"mtime":1612073363116,"results":"35","hashOfConfig":"22"},{"size":585,"mtime":1612055227161,"results":"36","hashOfConfig":"22"},{"size":2424,"mtime":1612412123027,"results":"37","hashOfConfig":"22"},{"size":1977,"mtime":1612658278839,"results":"38","hashOfConfig":"22"},{"size":5410,"mtime":1612416881203,"results":"39","hashOfConfig":"22"},{"size":2305,"mtime":1612655483220,"results":"40","hashOfConfig":"22"},{"size":5970,"mtime":1612657717877,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"10qg1nd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"F:\\lcomern\\projfront\\src\\index.js",[],["89","90"],"F:\\lcomern\\projfront\\src\\Routes.js",[],"F:\\lcomern\\projfront\\src\\user\\Signup.js",[],"F:\\lcomern\\projfront\\src\\user\\Signin.js",[],"F:\\lcomern\\projfront\\src\\core\\Home.js",[],"F:\\lcomern\\projfront\\src\\core\\Base.js",[],"F:\\lcomern\\projfront\\src\\core\\Menu.js",[],["91","92"],"F:\\lcomern\\projfront\\src\\auth\\helper\\index.js",["93","94"],"import {API} from '../../backend'\r\n\r\n//fetch operation starts here---\r\nexport const signup=(user)=>{\r\nreturn fetch(`${API}/signup`,{\r\nmethod:'POST',\r\nheaders:{\r\n    'Content-Type':'application/json'\r\n},\r\nbody:JSON.stringify(user)\r\n})\r\n.then((response)=>{\r\n    return response.json();\r\n})\r\n.catch(err=>console.log(err));\r\n};\r\n\r\nexport const signin=(user)=>{   //user : email & password.\r\n    return fetch(`${API}/signin`,{\r\n    method:'POST',\r\n    headers:{\r\n        'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify(user)\r\n    })\r\n    .then((response)=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n    };\r\n\r\nexport const authenticate=(data,next)=>{ //data includes: token and Signed-In user information.\r\n    if(typeof window!==\"ündefined\"){\r\n        localStorage.setItem('jwt',JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout=next=>{\r\n    if(typeof window!==\"ündefined\"){\r\n        localStorage.removeItem('jwt'); // we do have to remove the token from the browser storage also.\r\n        next();\r\n        return fetch(`${API}/signout`,{   //get back to backend.\r\n            method:'GET'\r\n        })\r\n        .then((response)=>console.log(response)) //Response received from backend.\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    };\r\n\r\n    export const isAuthenticated=()=>{ // check if user is signed in or not.\r\n        if(typeof window=='undefined'){\r\n            return false\r\n        }\r\n        if(localStorage.getItem('jwt')){\r\n            return JSON.parse(localStorage.getItem('jwt'))\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n  \r\n","F:\\lcomern\\projfront\\src\\backend.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\PrivateRoutes.js",[],"F:\\lcomern\\projfront\\src\\user\\AdminDashBoard.js",["95"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base'\r\n\r\n\r\nconst AdminDashboard=()=>{\r\nconst {user:{name,email,role}}=isAuthenticated();\r\n\r\n    const adminLeftSide=()=>{\r\n        return(\r\n            <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/create/category' className='nav-link text-success'>Create Categories</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/categories' className='nav-link text-success'>Manage Categories</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/create/product' className='nav-link text-success'>Create Product</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/products' className='nav-link text-success'>Manage Product</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/orders' className='nav-link text-success'>Manage Orders</Link>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n        )\r\n    }\r\n    //Note: Bootstrap badges are not able to load properly, thats why i have used custom CSS.\r\n    const adminRightSide=()=>{\r\n        return (\r\n            <div className=\"card mb-4\">\r\n                <h4 className=\"card-header\">Admin Information</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\">Name:</span>&nbsp;{name}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\">Email: </span>&nbsp;{email}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\" style={{backgroundColor:'red'}}>Admin Area</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Base title='You are on the Admin Page' description='Manage all of your products here' className='container bg-success p-4'>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                {adminLeftSide()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminRightSide()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;","F:\\lcomern\\projfront\\src\\user\\UserDashBoard.js",[],"F:\\lcomern\\projfront\\src\\user\\Profile.js",[],"F:\\lcomern\\projfront\\src\\admin\\AddCategory.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\AdminRoutes.js",[],"F:\\lcomern\\projfront\\src\\admin\\helper\\adminapicall.js",[],"F:\\lcomern\\projfront\\src\\admin\\ManageCategories.js",["96","97"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport Base from '../core/Base'\r\nimport { getCategories } from './helper/adminapicall'\r\n\r\nconst ManageCategories=()=> {\r\n    const [categories, setCategories] = useState([]);\r\n    const { user, token } = isAuthenticated();\r\n    const reLoad = () => {\r\n      getCategories().then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          setCategories(data);\r\n        }\r\n      });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      reLoad();\r\n    }, []);\r\n\r\n    return (\r\n        <Base title=\"Welcome admin\" description=\"Manage products here\">\r\n      <h2 className=\"mb-4\">All products:</h2>\r\n      <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n        <span className=\"\">Admin Home</span>\r\n      </Link>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"text-center text-white my-3\">Total 3 products</h2>\r\n        {\r\n            categories.map((category,index)=>{\r\n                return (\r\n                    <h3 className=\"text-white\" key={index}>{category.name}</h3>\r\n                )\r\n            })\r\n        }\r\n          <div className=\"row text-center mb-2 \">\r\n            <div className=\"col-4\">\r\n              <h3 className=\"text-white text-left\">I write code</h3>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <Link\r\n                className=\"btn btn-success\"\r\n                to={`/admin/product/update/productId`}\r\n              >\r\n                <span className=\"\">Update</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <button onClick={() => {}} className=\"btn btn-danger\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n    )\r\n}\r\n\r\nexport default ManageCategories;\r\n","F:\\lcomern\\projfront\\src\\admin\\AddProduct.js",["98","99","100","101","102","103"],"import React, {useState,useEffect} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport { createProduct, getCategories } from './helper/adminapicall';\r\n\r\nconst AddProduct=()=> {\r\n    const {user,token}=isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n          name: '',\r\n          description: '',\r\n          price: '',\r\n          stock: '',\r\n          photo:'',\r\n          categories:[],\r\n          category:'',\r\n          loading:false,\r\n          error:'',\r\n          createdProduct:'',\r\n          getRedirect:false,\r\n          formData:''\r\n        });\r\n      \r\n        const { name, description, price, stock,categories,category,loading,error,createdProduct,getRedirect,formData } = values;\r\n      \r\n        const preLoad=()=>{\r\n            getCategories().then((data)=>{\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }else{\r\n                    setValues({...values,categories:data,formData:new FormData()})\r\n                }\r\n            })\r\n        }\r\n\r\n        useEffect(() => {\r\n            preLoad();\r\n        }, []);\r\n\r\n        const onSubmit = (event) => {\r\n          event.preventDefault();\r\n          setValues({...values,error:'',loading:true});\r\n          createProduct(user._id,token,formData) //trigger api call.\r\n          .then((data)=>{\r\n            if(data.error){\r\n              setValues({...values,error:data.error})\r\n              errorMsg(data.error);\r\n            }else{\r\n              setValues({...values,name:'',description:'',price:'',photo:'',stock:'',loading:false,createdProduct:data.name})\r\n            }\r\n          })\r\n        };\r\n\r\n        \r\n    \r\n      \r\n        const handleChange = name => event => {\r\n          const value=name==='photo' ? event.target.files[0] : event.target.value;\r\n          formData.set(name,value);\r\n          setValues({...values,[name]:value});\r\n        };\r\n\r\n        const successMsg=()=>(\r\n          <div className=\"alert alert-success mt-3\" style={{display:createdProduct ? '' : 'none'}}>\r\n          <h4>{createdProduct} created successfully</h4>\r\n          </div>\r\n        )\r\n\r\n        const errorMsg=(error)=>(\r\n          <div className=\"alert alert-warning mt-3\" style={{display:error ? '' : 'none'}}>\r\n          <h4>Product addition failed</h4>\r\n          </div>\r\n        )\r\n      \r\n        const createProductForm = () => (\r\n          <form>\r\n            <span>Post photo</span>\r\n            <div className=\"form-group\">\r\n              <label className=\"btn btn-block btn-success\">\r\n                <input\r\n                  onChange={handleChange(\"photo\")}\r\n                  type=\"file\"\r\n                  name=\"photo\"\r\n                  accept=\"image\"\r\n                  placeholder=\"choose a file\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"name\")}\r\n                name=\"photo\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                onChange={handleChange(\"description\")}\r\n                name=\"photo\"\r\n                className=\"form-control\"\r\n                placeholder=\"Description\"\r\n                value={description}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"price\")}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select\r\n                onChange={handleChange(\"category\")}\r\n                className=\"form-control\"\r\n                placeholder=\"Category\"\r\n              >\r\n                <option>Select</option>\r\n                {categories && categories.map((cate,index)=>(\r\n                    <option key={index} value={cate._id}>{cate.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"stock\")}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Quantity\"\r\n                value={stock}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              className=\"btn btn-outline-success mb-3 rounded my-3\"\r\n            >\r\n              Create Product\r\n            </button>\r\n          </form>\r\n        );\r\n\r\n    return (\r\n        <Base title='Add product here!' description='Welcome to Product creation section' className='container bg-info p-4'>\r\n            <Link to='/admin/dashboard' className='btn btn-md btn-success mb-2 rounded'>Admin Home</Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                {successMsg()}\r\n                {errorMsg()}\r\n                {createProductForm()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","F:\\lcomern\\projfront\\src\\admin\\ManageProducts.js",[],"F:\\lcomern\\projfront\\src\\admin\\UpdateProduct.js",["104","105","106","107","108","109"],"import React, {useState,useEffect} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport {getCategories, getProduct, updateProduct } from './helper/adminapicall';\r\n\r\n\r\nconst UpdateProduct=({match})=> {\r\n    const {user,token}=isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n          name: '',\r\n          description: '',\r\n          price: '',\r\n          stock: '',\r\n          photo:'',\r\n          categories:[],\r\n          category:'',\r\n          loading:false,\r\n          error:'',\r\n          createdProduct:'',\r\n          getRedirect:false,\r\n          formData:''\r\n        });\r\n      \r\n        const { name, description, price, stock,categories,category,loading,error,createdProduct,getRedirect,formData } = values;\r\n      \r\n        const preLoad=(productId)=>{\r\n            getProduct(productId).then((data)=>{\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }else{\r\n                    preloadCategories();\r\n                    setValues({\r\n                        ...values,name:data.name,description:data.description,price:data.price,category:data.category._id,stock:data.stock,formData:new FormData()\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        const preloadCategories=()=>{\r\n            getCategories().then((data)=>{\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }else{\r\n                    setValues({categories:data,formData:new FormData()})\r\n                }\r\n            }).catch();\r\n        }\r\n\r\n        useEffect(() => {\r\n            preLoad(match.params.productId);\r\n        }, []);\r\n\r\n        const onSubmit = (event) => {\r\n          event.preventDefault();\r\n          setValues({...values,error:'',loading:true});\r\n          updateProduct(match.params.productId,user._id,token,formData) //trigger api call.\r\n          .then((data)=>{\r\n            if(data.error){\r\n              setValues({...values,error:data.error})\r\n            }else{\r\n              setValues({...values,name:'',description:'',price:'',photo:'',stock:'',loading:false,createdProduct:data.name})\r\n            }\r\n          })\r\n        };\r\n\r\n        \r\n    \r\n      \r\n        const handleChange = name => event => {\r\n          const value=name==='photo' ? event.target.files[0] : event.target.value;\r\n          formData.set(name,value);\r\n          setValues({...values,[name]:value});\r\n        };\r\n\r\n        const successMsg=()=>(\r\n          <div className=\"alert alert-success mt-3\" style={{display:createdProduct ? '' : 'none'}}>\r\n          <h4>{createdProduct} updated successfully</h4>\r\n          </div>\r\n        )\r\n\r\n        const errorMsg=(error)=>(\r\n          <div className=\"alert alert-warning mt-3\" style={{display:error ? '' : 'none'}}>\r\n          <h4>Product addition failed</h4>\r\n          </div>\r\n        )\r\n      \r\n        const createProductForm = () => (\r\n          <form>\r\n            <span>Post photo</span>\r\n            <div className=\"form-group\">\r\n              <label className=\"btn btn-block btn-success\">\r\n                <input\r\n                  onChange={handleChange(\"photo\")}\r\n                  type=\"file\"\r\n                  name=\"photo\"\r\n                  accept=\"image\"\r\n                  placeholder=\"choose a file\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"name\")}\r\n                name=\"photo\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                onChange={handleChange(\"description\")}\r\n                name=\"photo\"\r\n                className=\"form-control\"\r\n                placeholder=\"Description\"\r\n                value={description}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"price\")}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select\r\n                onChange={handleChange(\"category\")}\r\n                className=\"form-control\"\r\n                placeholder=\"Category\"\r\n              >\r\n                <option>Select</option>\r\n                {categories && categories.map((cate,index)=>(\r\n                    <option key={index} value={cate._id}>{cate.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"stock\")}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Quantity\"\r\n                value={stock}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              className=\"btn btn-outline-success mb-3 rounded my-3\"\r\n            >\r\n              Update Product\r\n            </button>\r\n          </form>\r\n        );\r\n\r\n    return (\r\n        <Base title='Add product here!' description='Welcome to Product creation section' className='container bg-info p-4'>\r\n            <Link to='/admin/dashboard' className='btn btn-md btn-success mb-2 rounded'>Admin Home</Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                {successMsg()}\r\n                {errorMsg()}\r\n                {createProductForm()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":33,"column":24,"nodeType":"118","messageId":"119","endLine":33,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":40,"column":24,"nodeType":"118","messageId":"119","endLine":40,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":8,"column":25,"nodeType":"122","messageId":"123","endLine":8,"endColumn":29},{"ruleId":"120","severity":1,"message":"124","line":9,"column":13,"nodeType":"122","messageId":"123","endLine":9,"endColumn":17},{"ruleId":"120","severity":1,"message":"125","line":9,"column":19,"nodeType":"122","messageId":"123","endLine":9,"endColumn":24},{"ruleId":"120","severity":1,"message":"126","line":2,"column":16,"nodeType":"122","messageId":"123","endLine":2,"endColumn":24},{"ruleId":"120","severity":1,"message":"127","line":25,"column":60,"nodeType":"122","messageId":"123","endLine":25,"endColumn":68},{"ruleId":"120","severity":1,"message":"128","line":25,"column":69,"nodeType":"122","messageId":"123","endLine":25,"endColumn":76},{"ruleId":"120","severity":1,"message":"129","line":25,"column":77,"nodeType":"122","messageId":"123","endLine":25,"endColumn":82},{"ruleId":"120","severity":1,"message":"130","line":25,"column":98,"nodeType":"122","messageId":"123","endLine":25,"endColumn":109},{"ruleId":"131","severity":1,"message":"132","line":39,"column":12,"nodeType":"133","endLine":39,"endColumn":14,"suggestions":"134"},{"ruleId":"120","severity":1,"message":"126","line":2,"column":16,"nodeType":"122","messageId":"123","endLine":2,"endColumn":24},{"ruleId":"120","severity":1,"message":"127","line":26,"column":60,"nodeType":"122","messageId":"123","endLine":26,"endColumn":68},{"ruleId":"120","severity":1,"message":"128","line":26,"column":69,"nodeType":"122","messageId":"123","endLine":26,"endColumn":76},{"ruleId":"120","severity":1,"message":"129","line":26,"column":77,"nodeType":"122","messageId":"123","endLine":26,"endColumn":82},{"ruleId":"120","severity":1,"message":"130","line":26,"column":98,"nodeType":"122","messageId":"123","endLine":26,"endColumn":109},{"ruleId":"131","severity":1,"message":"135","line":53,"column":12,"nodeType":"133","endLine":53,"endColumn":14,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'token' is assigned a value but never used.","'Redirect' is defined but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'getRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preLoad'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preLoad'. Either include them or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [preLoad]",{"range":"145","text":"146"},"Update the dependencies array to be: [match.params.productId, preLoad]",{"range":"147","text":"148"},[1216,1218],"[preLoad]",[1787,1789],"[match.params.productId, preLoad]"]