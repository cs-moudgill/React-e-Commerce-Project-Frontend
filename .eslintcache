[{"F:\\lcomern\\projfront\\src\\index.js":"1","F:\\lcomern\\projfront\\src\\Routes.js":"2","F:\\lcomern\\projfront\\src\\user\\Signup.js":"3","F:\\lcomern\\projfront\\src\\user\\Signin.js":"4","F:\\lcomern\\projfront\\src\\core\\Home.js":"5","F:\\lcomern\\projfront\\src\\core\\Base.js":"6","F:\\lcomern\\projfront\\src\\core\\Menu.js":"7","F:\\lcomern\\projfront\\src\\auth\\helper\\index.js":"8","F:\\lcomern\\projfront\\src\\backend.js":"9","F:\\lcomern\\projfront\\src\\auth\\helper\\PrivateRoutes.js":"10","F:\\lcomern\\projfront\\src\\user\\AdminDashBoard.js":"11","F:\\lcomern\\projfront\\src\\user\\UserDashBoard.js":"12","F:\\lcomern\\projfront\\src\\user\\Profile.js":"13","F:\\lcomern\\projfront\\src\\admin\\AddCategory.js":"14","F:\\lcomern\\projfront\\src\\auth\\helper\\AdminRoutes.js":"15","F:\\lcomern\\projfront\\src\\admin\\helper\\adminapicall.js":"16"},{"size":163,"mtime":1610847273402,"results":"17","hashOfConfig":"18"},{"size":1122,"mtime":1612054754756,"results":"19","hashOfConfig":"18"},{"size":2928,"mtime":1611466372939,"results":"20","hashOfConfig":"18"},{"size":3084,"mtime":1611970906886,"results":"21","hashOfConfig":"18"},{"size":756,"mtime":1611122620148,"results":"22","hashOfConfig":"18"},{"size":1198,"mtime":1611900357568,"results":"23","hashOfConfig":"18"},{"size":2808,"mtime":1611970765325,"results":"24","hashOfConfig":"18"},{"size":1645,"mtime":1611806537079,"results":"25","hashOfConfig":"18"},{"size":47,"mtime":1610854491145,"results":"26","hashOfConfig":"18"},{"size":570,"mtime":1611879460194,"results":"27","hashOfConfig":"18"},{"size":2522,"mtime":1611900283773,"results":"28","hashOfConfig":"18"},{"size":249,"mtime":1611877855889,"results":"29","hashOfConfig":"18"},{"size":230,"mtime":1611877769101,"results":"30","hashOfConfig":"18"},{"size":2677,"mtime":1612073363116,"results":"31","hashOfConfig":"18"},{"size":585,"mtime":1612055227161,"results":"32","hashOfConfig":"18"},{"size":465,"mtime":1612073606066,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"10qg1nd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\lcomern\\projfront\\src\\index.js",[],["69","70"],"F:\\lcomern\\projfront\\src\\Routes.js",[],"F:\\lcomern\\projfront\\src\\user\\Signup.js",[],"F:\\lcomern\\projfront\\src\\user\\Signin.js",[],"F:\\lcomern\\projfront\\src\\core\\Home.js",[],"F:\\lcomern\\projfront\\src\\core\\Base.js",[],"F:\\lcomern\\projfront\\src\\core\\Menu.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\index.js",["71","72"],"import {API} from '../../backend'\r\n\r\n//fetch operation starts here---\r\nexport const signup=(user)=>{\r\nreturn fetch(`${API}/signup`,{\r\nmethod:'POST',\r\nheaders:{\r\n    'Content-Type':'application/json'\r\n},\r\nbody:JSON.stringify(user)\r\n})\r\n.then((response)=>{\r\n    return response.json();\r\n})\r\n.catch(err=>console.log(err));\r\n};\r\n\r\nexport const signin=(user)=>{   //user : email & password.\r\n    return fetch(`${API}/signin`,{\r\n    method:'POST',\r\n    headers:{\r\n        'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify(user)\r\n    })\r\n    .then((response)=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n    };\r\n\r\nexport const authenticate=(data,next)=>{ //data includes: token and Signed-In user information.\r\n    if(typeof window!==\"ündefined\"){\r\n        localStorage.setItem('jwt',JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout=next=>{\r\n    if(typeof window!==\"ündefined\"){\r\n        localStorage.removeItem('jwt'); // we do have to remove the token from the browser storage also.\r\n        next();\r\n        return fetch(`${API}/signout`,{   //get back to backend.\r\n            method:'GET'\r\n        })\r\n        .then((response)=>console.log(response)) //Response received from backend.\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    };\r\n\r\n    export const isAuthenticated=()=>{ // check if user is signed in or not.\r\n        if(typeof window=='undefined'){\r\n            return false\r\n        }\r\n        if(localStorage.getItem('jwt')){\r\n            return JSON.parse(localStorage.getItem('jwt'))\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n  \r\n","F:\\lcomern\\projfront\\src\\backend.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\PrivateRoutes.js",[],"F:\\lcomern\\projfront\\src\\user\\AdminDashBoard.js",["73"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base'\r\n\r\n\r\nconst AdminDashboard=()=>{\r\nconst {user:{name,email,role}}=isAuthenticated();\r\n\r\n    const adminLeftSide=()=>{\r\n        return(\r\n            <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/create/category' className='nav-link text-success'>Create Categories</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/create/product' className='nav-link text-success'>Create Product</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/products' className='nav-link text-success'>Manage Product</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/orders' className='nav-link text-success'>Manage Orders</Link>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n        )\r\n    }\r\n    //Note: Bootstrap badges are not able to load properly, thats why i have used custom CSS.\r\n    const adminRightSide=()=>{\r\n        return (\r\n            <div className=\"card mb-4\">\r\n                <h4 className=\"card-header\">Admin Information</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\">Name:</span>&nbsp;{name}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\">Email: </span>&nbsp;{email}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\" style={{backgroundColor:'red'}}>Admin Area</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Base title='You are on the Admin Page' description='Manage all of your products here' className='container bg-success p-4'>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                {adminLeftSide()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminRightSide()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;","F:\\lcomern\\projfront\\src\\user\\UserDashBoard.js",[],"F:\\lcomern\\projfront\\src\\user\\Profile.js",[],"F:\\lcomern\\projfront\\src\\admin\\AddCategory.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\AdminRoutes.js",[],"F:\\lcomern\\projfront\\src\\admin\\helper\\adminapicall.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":33,"column":24,"nodeType":"80","messageId":"81","endLine":33,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":40,"column":24,"nodeType":"80","messageId":"81","endLine":40,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":8,"column":25,"nodeType":"84","messageId":"85","endLine":8,"endColumn":29},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]