[{"F:\\lcomern\\projfront\\src\\index.js":"1","F:\\lcomern\\projfront\\src\\Routes.js":"2","F:\\lcomern\\projfront\\src\\user\\Signup.js":"3","F:\\lcomern\\projfront\\src\\user\\Signin.js":"4","F:\\lcomern\\projfront\\src\\core\\Home.js":"5","F:\\lcomern\\projfront\\src\\core\\Base.js":"6","F:\\lcomern\\projfront\\src\\core\\Menu.js":"7","F:\\lcomern\\projfront\\src\\auth\\helper\\index.js":"8","F:\\lcomern\\projfront\\src\\backend.js":"9","F:\\lcomern\\projfront\\src\\auth\\helper\\PrivateRoutes.js":"10","F:\\lcomern\\projfront\\src\\user\\AdminDashBoard.js":"11","F:\\lcomern\\projfront\\src\\user\\UserDashBoard.js":"12","F:\\lcomern\\projfront\\src\\user\\Profile.js":"13","F:\\lcomern\\projfront\\src\\admin\\AddCategory.js":"14","F:\\lcomern\\projfront\\src\\auth\\helper\\AdminRoutes.js":"15","F:\\lcomern\\projfront\\src\\admin\\helper\\adminapicall.js":"16","F:\\lcomern\\projfront\\src\\admin\\ManageCategories.js":"17","F:\\lcomern\\projfront\\src\\admin\\AddProduct.js":"18","F:\\lcomern\\projfront\\src\\admin\\ManageProducts.js":"19","F:\\lcomern\\projfront\\src\\admin\\UpdateProduct.js":"20","F:\\lcomern\\projfront\\src\\admin\\updateCategory.js":"21","F:\\lcomern\\projfront\\src\\core\\Card.js":"22","F:\\lcomern\\projfront\\src\\core\\helper\\ImageHelper.js":"23","F:\\lcomern\\projfront\\src\\core\\helper\\coreapicalls.js":"24","F:\\lcomern\\projfront\\src\\core\\helper\\CartHelper.js":"25","F:\\lcomern\\projfront\\src\\core\\Cart.js":"26","F:\\lcomern\\projfront\\src\\core\\helper\\OrderHelper.js":"27","F:\\lcomern\\projfront\\src\\core\\helper\\PaymentBHelper.js":"28","F:\\lcomern\\projfront\\src\\core\\PaymentB.js":"29","F:\\lcomern\\projfront\\src\\core\\helper\\Paymentbhelper.js":"30"},{"size":163,"mtime":1610847273402,"results":"31","hashOfConfig":"32"},{"size":1917,"mtime":1613064988078,"results":"33","hashOfConfig":"32"},{"size":2928,"mtime":1611466372939,"results":"34","hashOfConfig":"32"},{"size":3084,"mtime":1611970906886,"results":"35","hashOfConfig":"32"},{"size":1253,"mtime":1613453393181,"results":"36","hashOfConfig":"32"},{"size":1198,"mtime":1611900357568,"results":"37","hashOfConfig":"32"},{"size":2808,"mtime":1611970765325,"results":"38","hashOfConfig":"32"},{"size":1676,"mtime":1613193037540,"results":"39","hashOfConfig":"32"},{"size":47,"mtime":1610854491145,"results":"40","hashOfConfig":"32"},{"size":554,"mtime":1612132136078,"results":"41","hashOfConfig":"32"},{"size":2692,"mtime":1612134885268,"results":"42","hashOfConfig":"32"},{"size":249,"mtime":1611877855889,"results":"43","hashOfConfig":"32"},{"size":230,"mtime":1611877769101,"results":"44","hashOfConfig":"32"},{"size":2677,"mtime":1612073363116,"results":"45","hashOfConfig":"32"},{"size":585,"mtime":1612055227161,"results":"46","hashOfConfig":"32"},{"size":3391,"mtime":1612763335010,"results":"47","hashOfConfig":"32"},{"size":2414,"mtime":1612738896623,"results":"48","hashOfConfig":"32"},{"size":5410,"mtime":1612416881203,"results":"49","hashOfConfig":"32"},{"size":2309,"mtime":1612733075191,"results":"50","hashOfConfig":"32"},{"size":5745,"mtime":1612760270919,"results":"51","hashOfConfig":"32"},{"size":3009,"mtime":1612764174083,"results":"52","hashOfConfig":"32"},{"size":2019,"mtime":1613074962432,"results":"53","hashOfConfig":"32"},{"size":582,"mtime":1612845248145,"results":"54","hashOfConfig":"32"},{"size":296,"mtime":1612843303615,"results":"55","hashOfConfig":"32"},{"size":1291,"mtime":1613196986449,"results":"56","hashOfConfig":"32"},{"size":1496,"mtime":1613452875063,"results":"57","hashOfConfig":"32"},{"size":412,"mtime":1613076294051,"results":"58","hashOfConfig":"32"},{"size":815,"mtime":1613452649761,"results":"59","hashOfConfig":"32"},{"size":1793,"mtime":1613454250359,"results":"60","hashOfConfig":"32"},{"size":815,"mtime":1613452649761,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"10qg1nd",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\lcomern\\projfront\\src\\index.js",[],["131","132"],"F:\\lcomern\\projfront\\src\\Routes.js",[],"F:\\lcomern\\projfront\\src\\user\\Signup.js",[],"F:\\lcomern\\projfront\\src\\user\\Signin.js",[],"F:\\lcomern\\projfront\\src\\core\\Home.js",["133"],"F:\\lcomern\\projfront\\src\\core\\Base.js",[],"F:\\lcomern\\projfront\\src\\core\\Menu.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\index.js",["134","135"],"import {API} from '../../backend'\r\n\r\n//fetch operation starts here---\r\nexport const signup=(user)=>{\r\nreturn fetch(`${API}/signup`,{\r\nmethod:'POST',\r\nheaders:{\r\n    'Content-Type':'application/json'\r\n},\r\nbody:JSON.stringify(user)\r\n})\r\n.then((response)=>{\r\n    return response.json();\r\n})\r\n.catch(err=>console.log(err));\r\n};\r\n\r\nexport const signin=(user)=>{   //user : email & password.\r\n    return fetch(`${API}/signin`,{\r\n    method:'POST',\r\n    headers:{\r\n        'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify(user)\r\n    })\r\n    .then((response)=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n    };\r\n\r\nexport const authenticate=(data,next)=>{ //data includes: token and Signed-In user information.\r\n    if(typeof window!==\"ündefined\"){\r\n        localStorage.setItem('jwt',JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout=next=>{\r\n    if(typeof window!==\"ündefined\"){\r\n        localStorage.removeItem('jwt'); // we do have to remove the token from the browser storage also.\r\n        next();\r\n        return fetch(`${API}/signout`,{   //get back to backend.\r\n            method:'GET'\r\n        })\r\n        .then((response)=>console.log(response)) //Response received from backend.\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    };\r\n\r\n    export const isAuthenticated=()=>{ // check if user is signed in or not.\r\n        if(typeof window=='undefined'){\r\n            return false\r\n        }\r\n        if(localStorage.getItem('jwt') && typeof window!=='undefined'){\r\n            return JSON.parse(localStorage.getItem('jwt'))\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n  \r\n","F:\\lcomern\\projfront\\src\\backend.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\PrivateRoutes.js",[],"F:\\lcomern\\projfront\\src\\user\\AdminDashBoard.js",["136"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base'\r\n\r\n\r\nconst AdminDashboard=()=>{\r\nconst {user:{name,email,role}}=isAuthenticated();\r\n\r\n    const adminLeftSide=()=>{\r\n        return(\r\n            <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/create/category' className='nav-link text-success'>Create Categories</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/categories' className='nav-link text-success'>Manage Categories</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/create/product' className='nav-link text-success'>Create Product</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/products' className='nav-link text-success'>Manage Product</Link>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <Link to='/admin/orders' className='nav-link text-success'>Manage Orders</Link>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n        )\r\n    }\r\n    //Note: Bootstrap badges are not able to load properly, thats why i have used custom CSS.\r\n    const adminRightSide=()=>{\r\n        return (\r\n            <div className=\"card mb-4\">\r\n                <h4 className=\"card-header\">Admin Information</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\">Name:</span>&nbsp;{name}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\">Email: </span>&nbsp;{email}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"badge badge-success\" style={{backgroundColor:'red'}}>Admin Area</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Base title='You are on the Admin Page' description='Manage all of your products here' className='container bg-success p-4'>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                {adminLeftSide()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminRightSide()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;","F:\\lcomern\\projfront\\src\\user\\UserDashBoard.js",[],"F:\\lcomern\\projfront\\src\\user\\Profile.js",[],"F:\\lcomern\\projfront\\src\\admin\\AddCategory.js",[],"F:\\lcomern\\projfront\\src\\auth\\helper\\AdminRoutes.js",[],"F:\\lcomern\\projfront\\src\\admin\\helper\\adminapicall.js",[],"F:\\lcomern\\projfront\\src\\admin\\ManageCategories.js",[],"F:\\lcomern\\projfront\\src\\admin\\AddProduct.js",["137","138","139","140","141","142"],"import React, {useState,useEffect} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport { createProduct, getCategories } from './helper/adminapicall';\r\n\r\nconst AddProduct=()=> {\r\n    const {user,token}=isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n          name: '',\r\n          description: '',\r\n          price: '',\r\n          stock: '',\r\n          photo:'',\r\n          categories:[],\r\n          category:'',\r\n          loading:false,\r\n          error:'',\r\n          createdProduct:'',\r\n          getRedirect:false,\r\n          formData:''\r\n        });\r\n      \r\n        const { name, description, price, stock,categories,category,loading,error,createdProduct,getRedirect,formData } = values;\r\n      \r\n        const preLoad=()=>{\r\n            getCategories().then((data)=>{\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }else{\r\n                    setValues({...values,categories:data,formData:new FormData()})\r\n                }\r\n            })\r\n        }\r\n\r\n        useEffect(() => {\r\n            preLoad();\r\n        }, []);\r\n\r\n        const onSubmit = (event) => {\r\n          event.preventDefault();\r\n          setValues({...values,error:'',loading:true});\r\n          createProduct(user._id,token,formData) //trigger api call.\r\n          .then((data)=>{\r\n            if(data.error){\r\n              setValues({...values,error:data.error})\r\n              errorMsg(data.error);\r\n            }else{\r\n              setValues({...values,name:'',description:'',price:'',photo:'',stock:'',loading:false,createdProduct:data.name})\r\n            }\r\n          })\r\n        };\r\n\r\n        \r\n    \r\n      \r\n        const handleChange = name => event => {\r\n          const value=name==='photo' ? event.target.files[0] : event.target.value;\r\n          formData.set(name,value);\r\n          setValues({...values,[name]:value});\r\n        };\r\n\r\n        const successMsg=()=>(\r\n          <div className=\"alert alert-success mt-3\" style={{display:createdProduct ? '' : 'none'}}>\r\n          <h4>{createdProduct} created successfully</h4>\r\n          </div>\r\n        )\r\n\r\n        const errorMsg=(error)=>(\r\n          <div className=\"alert alert-warning mt-3\" style={{display:error ? '' : 'none'}}>\r\n          <h4>Product addition failed</h4>\r\n          </div>\r\n        )\r\n      \r\n        const createProductForm = () => (\r\n          <form>\r\n            <span>Post photo</span>\r\n            <div className=\"form-group\">\r\n              <label className=\"btn btn-block btn-success\">\r\n                <input\r\n                  onChange={handleChange(\"photo\")}\r\n                  type=\"file\"\r\n                  name=\"photo\"\r\n                  accept=\"image\"\r\n                  placeholder=\"choose a file\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"name\")}\r\n                name=\"photo\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                onChange={handleChange(\"description\")}\r\n                name=\"photo\"\r\n                className=\"form-control\"\r\n                placeholder=\"Description\"\r\n                value={description}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"price\")}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select\r\n                onChange={handleChange(\"category\")}\r\n                className=\"form-control\"\r\n                placeholder=\"Category\"\r\n              >\r\n                <option>Select</option>\r\n                {categories && categories.map((cate,index)=>(\r\n                    <option key={index} value={cate._id}>{cate.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={handleChange(\"stock\")}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Quantity\"\r\n                value={stock}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              className=\"btn btn-outline-success mb-3 rounded my-3\"\r\n            >\r\n              Create Product\r\n            </button>\r\n          </form>\r\n        );\r\n\r\n    return (\r\n        <Base title='Add product here!' description='Welcome to Product creation section' className='container bg-info p-4'>\r\n            <Link to='/admin/dashboard' className='btn btn-md btn-success mb-2 rounded'>Admin Home</Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                {successMsg()}\r\n                {errorMsg()}\r\n                {createProductForm()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","F:\\lcomern\\projfront\\src\\admin\\ManageProducts.js",[],"F:\\lcomern\\projfront\\src\\admin\\UpdateProduct.js",["143","144","145","146","147","148"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\nimport Base from \"../core/Base\";\r\nimport {\r\n  getCategories,\r\n  getProduct,\r\n  updateProduct,\r\n} from \"./helper/adminapicall\";\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n  //props used here which is directly linked to its routes.\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getRedirect: false,\r\n    formData: \"\",\r\n  });\r\n  //Destructure\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getRedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  const preLoad = (productId) => {\r\n    //extracted with the help of useEffect.\r\n    getProduct(productId).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        preloadCategories();\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category._id,\r\n          stock: data.stock,\r\n          formData: new FormData(),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const preloadCategories = () => {\r\n    getCategories()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({ categories: data, formData: new FormData() });\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(match.params.productId);\r\n  }, []);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    updateProduct(match.params.productId, user._id, token, formData) //trigger api call.\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            photo: \"\",\r\n            stock: \"\",\r\n            loading: false,\r\n            createdProduct: data.name,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value; //event.target.files[0] relates to image.\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMsg = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdProduct} updated successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  const errorMsg = (error) => (\r\n    <div\r\n      className=\"alert alert-warning mt-3\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      <h4>Product addition failed</h4>\r\n    </div>\r\n  );\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Quantity\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3 rounded my-3\"\r\n      >\r\n        Update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Add product here!\"\r\n      description=\"Welcome to Product creation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link\r\n        to=\"/admin/dashboard\"\r\n        className=\"btn btn-md btn-success mb-2 rounded\"\r\n      >\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMsg()}\r\n          {errorMsg()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","F:\\lcomern\\projfront\\src\\admin\\updateCategory.js",["149"],"import React, { useEffect, useState } from 'react';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { Link } from 'react-router-dom';\r\nimport Base from '../core/Base';\r\nimport { updateCategory, getCategory } from './helper/adminapicall';\r\n\r\n\r\nconst UpdateCategory=({match})=>{\r\n    const [name,setName]=useState(\"\")\r\n    const [error,setError]=useState(false);\r\n    const [success,setSuccess]=useState(false);\r\n\r\n    const{user, token}=isAuthenticated();\r\n\r\n    const goBack=()=>{\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <Link className=\"btn btn-small btn-success mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const preload=(categoryId)=>{\r\n        getCategory(categoryId).then((data)=>{\r\n            if(data.error){\r\n                setError(true)\r\n            }else{\r\n                setName(data.name)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n       preload(match.params.categoryId)\r\n    },[])\r\n\r\n    const handleChange=(event)=>{\r\n        setError(\"\");\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const successMessage=()=>{\r\n        if(success){\r\n            return (\r\n            <h4 className=\"text-success\">Category Updated Successfully</h4>\r\n            )\r\n        }\r\n    }\r\n\r\n    const warningMessage=()=>{\r\n        if(error){\r\n            return (\r\n            <h4 className=\"text-success\">Failed To Update Category</h4>\r\n            )\r\n        }\r\n    }\r\n\r\n    const onSubmit=(event)=>{\r\n        event.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // Backend request fired\r\n        updateCategory(match.params.categoryId,user._id,token,{name})\r\n        .then((data)=>{\r\n            console.log(data)\r\n            if(!data){\r\n                setError(true)\r\n            }\r\n            else{\r\n                setError(\"\");\r\n                setSuccess(true);\r\n                setName(\"\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const myCategoryForm=()=>{\r\n        \r\n        return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <p className=\"lead\">Update the Category</p>\r\n                <input className=\"form-control my-3\" type=\"text\" \r\n                onChange={handleChange} value={name}\r\n                autoFocus required placeholder=\"For Ex- Summer\"/>\r\n                <button onClick={onSubmit} className=\"btn btn-outline-info\">Update Category</button>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Base title=\"Category Updation Area\" description=\"An area for updation of Categories\" className=\"container bg-info p-4\">\r\n            <div className=\"row bg-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {successMessage()}\r\n                    {warningMessage()}\r\n                    {myCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory;","F:\\lcomern\\projfront\\src\\core\\Card.js",["150","151","152"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { addItemToCart, removeFromCart } from \"./helper/CartHelper\";\r\nimport ImageHelper from \"./helper/ImageHelper\";\r\n\r\nconst Card = ({\r\n  product,\r\n  addCartOption = true,\r\n  removeCartOption = false,\r\n  setReload,\r\n  reload = false,\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const addToCart = () => {\r\n    addItemToCart(product, () => {\r\n      setRedirect(true);\r\n    });\r\n  };\r\n\r\n  const getRedirect = (redirect) => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const addCart = (addCartOption) => {\r\n    return (\r\n      addCartOption && (\r\n        <button\r\n          onClick={addToCart}\r\n          className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n        >\r\n          Add to Cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeCart = () => {\r\n    return (\r\n      removeCartOption && (\r\n        <button\r\n          onClick={() => {\r\n            removeFromCart(product._id);\r\n            setReload(true)\r\n          }}\r\n          className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove from cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card text-white bg-dark border border-info \">\r\n      <div className=\"card-header lead\">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {getRedirect(redirect)}\r\n        <ImageHelper product={product} />\r\n        <p className=\"lead bg-success font-weight-normal text-wrap\">\r\n          {product.description}\r\n        </p>\r\n        <p className=\"btn btn-success rounded  btn-sm px-4\">\r\n          $ {product.price}\r\n        </p>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">{addCart(addCartOption)}</div>\r\n          <div className=\"col-12\">{removeCart(removeCartOption)}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","F:\\lcomern\\projfront\\src\\core\\helper\\ImageHelper.js",["153"],"import React from 'react'\r\nimport { API } from '../../backend'\r\n\r\nconst ImageHelper=({product})=> {\r\nconst imageUrl=product ? `${API}/product/photo/${product._id}` : \"https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n\r\n    return (\r\n        <div className=\"rounded border border-success p-2\">\r\n        <img\r\n          src={imageUrl}\r\n          alt=\"photo\"\r\n          style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n          className=\"mb-3 rounded\"\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ImageHelper\r\n","F:\\lcomern\\projfront\\src\\core\\helper\\coreapicalls.js",[],"F:\\lcomern\\projfront\\src\\core\\helper\\CartHelper.js",["154","155"],"export const addItemToCart = (item, next) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    cart.push({\r\n      ...item,\r\n      count: 1,\r\n    });\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  }\r\n};\r\n\r\n//remove a product from cart.\r\nexport const removeFromCart = (productId) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    cart.map((product, index) => {\r\n      if (product._id == productId) {\r\n        cart.splice(index, 1);\r\n      }\r\n    });\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    //   window.location.reload(); // we can use this to reload but this will reload entire webpage instead component.\r\n  }\r\n  return cart;\r\n};\r\n\r\nexport const loadCart = () => {\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      return JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n  }\r\n};\r\n\r\n//after order is placed, cart needs to be empty.\r\nexport const emptyCart = (next) => {\r\n  if (typeof window !== undefined) {\r\n      localStorage.removeItem('cart')\r\n      next();\r\n  }\r\n};\r\n","F:\\lcomern\\projfront\\src\\core\\Cart.js",[],"F:\\lcomern\\projfront\\src\\core\\helper\\OrderHelper.js",[],"F:\\lcomern\\projfront\\src\\core\\helper\\PaymentBHelper.js",[],"F:\\lcomern\\projfront\\src\\core\\PaymentB.js",["156","157","158","159","160","161"],"F:\\lcomern\\projfront\\src\\core\\helper\\Paymentbhelper.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":33,"column":24,"nodeType":"172","messageId":"173","endLine":33,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":40,"column":24,"nodeType":"172","messageId":"173","endLine":40,"endColumn":35},{"ruleId":"166","severity":1,"message":"174","line":8,"column":25,"nodeType":"168","messageId":"169","endLine":8,"endColumn":29},{"ruleId":"166","severity":1,"message":"175","line":2,"column":16,"nodeType":"168","messageId":"169","endLine":2,"endColumn":24},{"ruleId":"166","severity":1,"message":"176","line":25,"column":60,"nodeType":"168","messageId":"169","endLine":25,"endColumn":68},{"ruleId":"166","severity":1,"message":"177","line":25,"column":69,"nodeType":"168","messageId":"169","endLine":25,"endColumn":76},{"ruleId":"166","severity":1,"message":"167","line":25,"column":77,"nodeType":"168","messageId":"169","endLine":25,"endColumn":82},{"ruleId":"166","severity":1,"message":"178","line":25,"column":98,"nodeType":"168","messageId":"169","endLine":25,"endColumn":109},{"ruleId":"179","severity":1,"message":"180","line":39,"column":12,"nodeType":"181","endLine":39,"endColumn":14,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"175","line":2,"column":16,"nodeType":"168","messageId":"169","endLine":2,"endColumn":24},{"ruleId":"166","severity":1,"message":"176","line":36,"column":5,"nodeType":"168","messageId":"169","endLine":36,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":37,"column":5,"nodeType":"168","messageId":"169","endLine":37,"endColumn":12},{"ruleId":"166","severity":1,"message":"167","line":38,"column":5,"nodeType":"168","messageId":"169","endLine":38,"endColumn":10},{"ruleId":"166","severity":1,"message":"178","line":40,"column":5,"nodeType":"168","messageId":"169","endLine":40,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":78,"column":6,"nodeType":"181","endLine":78,"endColumn":8,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"185","line":35,"column":7,"nodeType":"181","endLine":35,"endColumn":9,"suggestions":"186"},{"ruleId":"166","severity":1,"message":"187","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"188","line":14,"column":10,"nodeType":"168","messageId":"169","endLine":14,"endColumn":15},{"ruleId":"166","severity":1,"message":"189","line":14,"column":17,"nodeType":"168","messageId":"169","endLine":14,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":9,"column":9,"nodeType":"192","endLine":14,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":23,"column":31,"nodeType":"195","messageId":"196","endLine":23,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":24,"column":23,"nodeType":"199","messageId":"200","endLine":24,"endColumn":25},{"ruleId":"166","severity":1,"message":"201","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"202","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"203","line":3,"column":21,"nodeType":"168","messageId":"169","endLine":3,"endColumn":29},{"ruleId":"166","severity":1,"message":"204","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":21},{"ruleId":"166","severity":1,"message":"205","line":5,"column":22,"nodeType":"168","messageId":"169","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"206","line":52,"column":6,"nodeType":"181","endLine":52,"endColumn":8,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","'role' is assigned a value but never used.","'Redirect' is defined but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preLoad'. Either include it or remove the dependency array.","ArrayExpression",["210"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preLoad'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["212"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'emptyCart' is defined but never used.","'loadCart' is defined but never used.","'createOrder' is defined but never used.","'processPayment' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [preLoad]",{"range":"222","text":"223"},"Update the dependencies array to be: [match.params.productId, preLoad]",{"range":"224","text":"225"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"226","text":"227"},"Update the dependencies array to be: [token, userId]",{"range":"228","text":"229"},[1216,1218],"[preLoad]",[1834,1836],"[match.params.productId, preLoad]",[997,999],"[match.params.categoryId]",[1668,1670],"[token, userId]"]